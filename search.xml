<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[解决网页版百度云大文件下载限制]]></title>
      <url>http://hzmyj.github.io/2017/01/31/%E8%A7%A3%E5%86%B3%E7%BD%91%E9%A1%B5%E7%89%88%E7%99%BE%E5%BA%A6%E4%BA%91%E5%A4%A7%E6%96%87%E4%BB%B6%E4%B8%8B%E8%BD%BD%E9%99%90%E5%88%B6/</url>
      <content type="html"><![CDATA[<p>　　前言：本文旨在提供几个解决PC网页版百度云下载大文件时的受限问题，并可通过复制下载链接来变相达到破解限速问题。<br><a id="more"></a></p>
<h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><p>　　其实百度云分享资源还是挺方便的，如果忽略掉各种吞链接的情况。但是百度云有一个实在让人无法忍受的地方，就是限速。非会员下载限速不说，连上传也限速，还地区性和谐。而且文件超过一定大小限制后，下载时就会提示使用百度云管家，什么鬼！貌似有部分文件类型也无法直接下载，比如安卓apk文件(Are you kidding me ??)。<br>　　而且现在低版本的百度云管家已经登不上了，提示1550010错误，所以破解版基本也用不了了！？期待不久后还有大佬捣鼓出破解版的。<br>　　好了，废话扯了那么多，下面进入正题，今天给各位分享几个解除百度云大文件下载限制的方法。</p>
<p><strong>说在前面：只针对PC端，且所有操作均在Firefox或Chrome浏览器下操作。</strong></p>
<h1 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h1><p>　　打开 <a href="http://tampermonkey.net/" target="_blank" rel="external">Tampermonkey</a>，直接下载安装。（如果用FireFox打开该扩展官网，则显示的是FireFox扩展，原理和方法大同小异）<br><img src="/2017/01/31/解决网页版百度云大文件下载限制/step1.png" alt="扩展官网"><br>　　如果是Chrome，因为是从Google Chrome官方商店下载扩展，所以需要挂SS之类，可直接戳<a href="https://pan.baidu.com/s/1pK9YAi3" target="_blank" rel="external">https://pan.baidu.com/s/1pK9YAi3</a>下载，密码: 6xac。直接拖拽安装(如果不成功，可在扩展程序界面进行拖拽安装)<br>　　安装完毕后浏览器右上角会出现扩展图标<br><img src="/2017/01/31/解决网页版百度云大文件下载限制/step2.jpg" alt=""><br>　　然后打开网址<a href="https://greasyfork.org/zh-CN/scripts/17800" target="_blank" rel="external">https://greasyfork.org/zh-CN/scripts/17800</a>，选择安装脚本，自动添加脚本到Tampermonkey扩展里<br><img src="/2017/01/31/解决网页版百度云大文件下载限制/step3.jpg" alt=""><br><img src="/2017/01/31/解决网页版百度云大文件下载限制/step4.jpg" alt=""><br>　　打开百度云盘相关界面(如果原本已打开则刷新)，脚本打开时如下图显示，可直接下载。之后可以打开下载页面，复制下载链接，然后使用迅雷等工具下载<br><img src="/2017/01/31/解决网页版百度云大文件下载限制/step5.jpg" alt=""></p>
<h1 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h1><p>　　一个更加无脑的扩展，安装即可用，来自另一位博主的分享<a href="http://blog.jarjar.cn/one-line-js-crack-baidu-yun/" target="_blank" rel="external">http://blog.jarjar.cn/one-line-js-crack-baidu-yun/</a>(无耻的做了一次搬运工)<br>　　有人会问那为啥还介绍第一种方法，自找麻烦不是？<br>　　一个原因是本方法的扩展只支持Chrome(我只看到了crx插件)，而方法一支持多种主流浏览器，可按需下载安装；还有就是Tampermonkey还有其他有意思的脚本，安装多个脚本后也便于管理(如有需要自行百度)。<br>　　本方法简单无脑，不过多介绍，直接贴扩展链接<a href="https://pan.baidu.com/s/1cCbozs" target="_blank" rel="external">https://pan.baidu.com/s/1cCbozs</a> 密码: 4nn2，若想更多了解请直接戳原博主链接，另附有github源码</p>
<h1 id="方法三"><a href="#方法三" class="headerlink" title="方法三"></a>方法三</h1><p>　　直接在浏览器里执行代码，在百度盘的界面打开JS控制台，快捷键Ctrl+Shift+J，输入这行，然后回车<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Object.defineProperty(Object.getPrototypeOf(navigator),&apos;platform&apos;,&#123;get:function()&#123;return &apos;sb_baidu&apos;;&#125;&#125;)</div></pre></td></tr></table></figure></p>
<p><img src="/2017/01/31/解决网页版百度云大文件下载限制/step6.jpg" alt=""></p>
<p>　　<strong>以上方法亲测可以，祝愿大家下载愉快~</strong></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Hexo 博客搭建]]></title>
      <url>http://hzmyj.github.io/2017/01/29/hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/</url>
      <content type="html"><![CDATA[<p>　　本文旨在记录搭建Hexo博客的过程，希望对到访本页的友人一点帮助。<br><a id="more"></a><br>　　博主的博客由于一些原因前后重新搭建了四次，也遇到过不少障碍，有时候这次记得的步骤下次就忘记了，特写一篇较为详尽的博客来记录，以便回访。</p>
<h2 id="一、前期准备"><a href="#一、前期准备" class="headerlink" title="一、前期准备"></a>一、前期准备</h2><ul>
<li>注册Github账号</li>
<li>安装Git for Windows和Node.js</li>
</ul>
<h3 id="Git-for-windows部署"><a href="#Git-for-windows部署" class="headerlink" title="Git for windows部署"></a>Git for windows部署</h3><p>首先将之前注册的github账号和邮箱初始化给电脑<br>桌面右键运行git bash，依次输入如下指令</p>
<blockquote>
<p>git config –global user.name “yourname”<br>git config –global user.email “youremail”</p>
</blockquote>
<h2 id="二、SSH-key的相关设置"><a href="#二、SSH-key的相关设置" class="headerlink" title="二、SSH key的相关设置"></a>二、SSH key的相关设置</h2><h3 id="Windows下配置SSH并连接到github、github配置SSH-Key"><a href="#Windows下配置SSH并连接到github、github配置SSH-Key" class="headerlink" title="Windows下配置SSH并连接到github、github配置SSH Key"></a>Windows下配置SSH并连接到github、github配置SSH Key</h3><ul>
<li>检查本机是否有SSH Key设置<br>输入命令<code>cd ~/.ssh</code></li>
</ul>
<ol>
<li>若没有，则提示： No such file or director  继续后面步骤</li>
<li>若有，则进入 ~/.ssh路径，<code>rm *</code>删除所有文件</li>
</ol>
<h4 id="使用Git-Bash生成新的ssh-key"><a href="#使用Git-Bash生成新的ssh-key" class="headerlink" title="使用Git Bash生成新的ssh key"></a>使用Git Bash生成新的ssh key</h4><p>输入<br><code>cd ~</code>保证当前路径在”~”下<br><code>ssh-keygen -t rsa -C &quot;xxxx@yy.com&quot;</code>填写真实的邮箱地址，建议选择注册github时的邮箱</p>
<h4 id="添加ssh-key到github"><a href="#添加ssh-key到github" class="headerlink" title="添加ssh key到github"></a>添加ssh key到github</h4><ol>
<li>登录github，点击”▽”-settings-ssh keys-add ssh key</li>
<li>复制id_rsa.pub(用TXT打开，全选)的公钥，添加到相应位置</li>
<li>测试ssh keys是否配置成功,输入指令<blockquote>
<p>ssh -T git@github.com</p>
</blockquote>
</li>
</ol>
<p>　　若出现”Hi xxx! You’ve successfully authenticated, but GitHub does not provide shell access”，则设置成功</p>
<h2 id="三、远程连接"><a href="#三、远程连接" class="headerlink" title="三、远程连接"></a>三、远程连接</h2><h3 id="将本地项目通过SSH-push到github"><a href="#将本地项目通过SSH-push到github" class="headerlink" title="将本地项目通过SSH push到github"></a>将本地项目通过SSH push到github</h3><ol>
<li>1 创建目录 <blockquote>
<p>mkdir test<br>cd test</p>
</blockquote>
</li>
<li>2 初始化<blockquote>
<p>git init </p>
</blockquote>
</li>
<li>3.创建 hello.md文件<blockquote>
<p>echo “这是一次测试test ssh key” &gt; hello.md</p>
</blockquote>
</li>
<li>4 提交到本地<blockquote>
<p>git add .<br>git commit -m “add hello.md”   #提交记录说明 </p>
</blockquote>
</li>
<li>5 提交到github<blockquote>
<p>git remote add origin ‘粘贴复制test ssh key的ssh路径’  #<br>git push -u origin master</p>
</blockquote>
</li>
</ol>
<h3 id="Hexo部署"><a href="#Hexo部署" class="headerlink" title="Hexo部署"></a>Hexo部署</h3><ul>
<li>执行命令<blockquote>
<p>npm install hexo -g       #全局安装hexo</p>
</blockquote>
</li>
</ul>
<p>　　第一次执行这个操作时，卡在安装过程。后卸载现有node.js并在<a href="https://www.baidu.com/link?url=AqumB_lIyL0_EkHfKb3fmmaUM_RLVYkTGcN7Uz_O_7y&amp;wd=&amp;eqid=b724fee7000b232d0000000557f3401f" target="_blank" rel="external">官网</a>下载最新版本，安装后依然无用。后来在寝室完成安装hexo。推测和下载网速有关。</p>
<ul>
<li>新建目录并转移到目录下<blockquote>
<p>mkdir blog<br>cd blog</p>
</blockquote>
</li>
<li>初始化hexo<blockquote>
<p>hexo init</p>
</blockquote>
</li>
<li>启动<blockquote>
<p>hexo server</p>
</blockquote>
</li>
</ul>
<p>在浏览器中访问localhost:4000，若成则说明hexo配置成功(若按下ctrl+c则停止访问)</p>
<ul>
<li>将本地hexo与远程github关联</li>
<li>修改配置文件_config.yml，用文本编辑器打开，修改最下面deployer属性<br>type/repository/branch</li>
<li>安装hexo-deployer-git<blockquote>
<p>npm install hexo-deployer-git -S</p>
</blockquote>
</li>
<li>执行hexo g生成静态网页</li>
<li>执行hexo d部署到远程github</li>
</ul>
<p>　　至此可以直接访问博客，目的达到！   </p>
<p>　　<strong>由上面所有步骤创建出来的只是一个最简单的博客界面，里面的主题、文章 、排版等需要自己编写和设置。</strong></p>
<h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>　　讲道理，自己动手做一个东西，感觉是非常奇妙的。你需要自己解决所遇到的各种问题，有时候可能只是拼写错误这种小事，有时会出现一个新错误，不过问问度娘就可以解决掉，但你也可能遇到一些无法理解也根本找不到解决办法的“玄学问题”，也许只能重新来过了。<br>　　你需要耐心的去分析、解决问题，在后来的操作过程中更加仔细、认真。一些错误的出现，也会对一些代码、命令语句、错误报告有更深入的理解。这个过程是宝贵的。<br>　　在写博客时，需要自己去学习一下markdown语法，这个语法特别简单，用着很舒心。<br>　　学习的过程永远是最享受最富有乐趣的，尤其是当你回过头来看时。</p>
]]></content>
    </entry>
    
  
  
</search>
